//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace T1_BHS_OAS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("T1_BHSDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class T1_BHS_DataSet : global::System.Data.DataSet {
        
        private FIDS_2DAYDataTable tableFIDS_2DAY;
        
        private LATERAL_CONFDataTable tableLATERAL_CONF;
        
        private LOOK_UPDataTable tableLOOK_UP;
        
        private MAKEUP_ALLOCDataTable tableMAKEUP_ALLOC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public T1_BHS_DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected T1_BHS_DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FIDS_2DAY"] != null)) {
                    base.Tables.Add(new FIDS_2DAYDataTable(ds.Tables["FIDS_2DAY"]));
                }
                if ((ds.Tables["LATERAL_CONF"] != null)) {
                    base.Tables.Add(new LATERAL_CONFDataTable(ds.Tables["LATERAL_CONF"]));
                }
                if ((ds.Tables["LOOK_UP"] != null)) {
                    base.Tables.Add(new LOOK_UPDataTable(ds.Tables["LOOK_UP"]));
                }
                if ((ds.Tables["MAKEUP_ALLOC"] != null)) {
                    base.Tables.Add(new MAKEUP_ALLOCDataTable(ds.Tables["MAKEUP_ALLOC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FIDS_2DAYDataTable FIDS_2DAY {
            get {
                return this.tableFIDS_2DAY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LATERAL_CONFDataTable LATERAL_CONF {
            get {
                return this.tableLATERAL_CONF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOOK_UPDataTable LOOK_UP {
            get {
                return this.tableLOOK_UP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MAKEUP_ALLOCDataTable MAKEUP_ALLOC {
            get {
                return this.tableMAKEUP_ALLOC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            T1_BHS_DataSet cln = ((T1_BHS_DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FIDS_2DAY"] != null)) {
                    base.Tables.Add(new FIDS_2DAYDataTable(ds.Tables["FIDS_2DAY"]));
                }
                if ((ds.Tables["LATERAL_CONF"] != null)) {
                    base.Tables.Add(new LATERAL_CONFDataTable(ds.Tables["LATERAL_CONF"]));
                }
                if ((ds.Tables["LOOK_UP"] != null)) {
                    base.Tables.Add(new LOOK_UPDataTable(ds.Tables["LOOK_UP"]));
                }
                if ((ds.Tables["MAKEUP_ALLOC"] != null)) {
                    base.Tables.Add(new MAKEUP_ALLOCDataTable(ds.Tables["MAKEUP_ALLOC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFIDS_2DAY = ((FIDS_2DAYDataTable)(base.Tables["FIDS_2DAY"]));
            if ((initTable == true)) {
                if ((this.tableFIDS_2DAY != null)) {
                    this.tableFIDS_2DAY.InitVars();
                }
            }
            this.tableLATERAL_CONF = ((LATERAL_CONFDataTable)(base.Tables["LATERAL_CONF"]));
            if ((initTable == true)) {
                if ((this.tableLATERAL_CONF != null)) {
                    this.tableLATERAL_CONF.InitVars();
                }
            }
            this.tableLOOK_UP = ((LOOK_UPDataTable)(base.Tables["LOOK_UP"]));
            if ((initTable == true)) {
                if ((this.tableLOOK_UP != null)) {
                    this.tableLOOK_UP.InitVars();
                }
            }
            this.tableMAKEUP_ALLOC = ((MAKEUP_ALLOCDataTable)(base.Tables["MAKEUP_ALLOC"]));
            if ((initTable == true)) {
                if ((this.tableMAKEUP_ALLOC != null)) {
                    this.tableMAKEUP_ALLOC.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "T1_BHSDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/T1_BHSDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFIDS_2DAY = new FIDS_2DAYDataTable();
            base.Tables.Add(this.tableFIDS_2DAY);
            this.tableLATERAL_CONF = new LATERAL_CONFDataTable();
            base.Tables.Add(this.tableLATERAL_CONF);
            this.tableLOOK_UP = new LOOK_UPDataTable();
            base.Tables.Add(this.tableLOOK_UP);
            this.tableMAKEUP_ALLOC = new MAKEUP_ALLOCDataTable();
            base.Tables.Add(this.tableMAKEUP_ALLOC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeFIDS_2DAY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeLATERAL_CONF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeLOOK_UP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeMAKEUP_ALLOC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            T1_BHS_DataSet ds = new T1_BHS_DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void FIDS_2DAYRowChangeEventHandler(object sender, FIDS_2DAYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void LATERAL_CONFRowChangeEventHandler(object sender, LATERAL_CONFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void LOOK_UPRowChangeEventHandler(object sender, LOOK_UPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void MAKEUP_ALLOCRowChangeEventHandler(object sender, MAKEUP_ALLOCRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FIDS_2DAYDataTable : global::System.Data.TypedTableBase<FIDS_2DAYRow> {
            
            private global::System.Data.DataColumn columnFIDS_DATE;
            
            private global::System.Data.DataColumn columnFLIGHT_NO;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnSTD;
            
            private global::System.Data.DataColumn columnETD;
            
            private global::System.Data.DataColumn columnATD;
            
            private global::System.Data.DataColumn columnCONVEY_NO;
            
            private global::System.Data.DataColumn columnDESTINATION;
            
            private global::System.Data.DataColumn columnPLANE;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnTERMINAL;
            
            private global::System.Data.DataColumn columnVALID;
            
            private global::System.Data.DataColumn columnCO_SHARE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FIDS_2DAYDataTable() {
                this.TableName = "FIDS_2DAY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal FIDS_2DAYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected FIDS_2DAYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FIDS_DATEColumn {
                get {
                    return this.columnFIDS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FLIGHT_NOColumn {
                get {
                    return this.columnFLIGHT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn STDColumn {
                get {
                    return this.columnSTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ETDColumn {
                get {
                    return this.columnETD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ATDColumn {
                get {
                    return this.columnATD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CONVEY_NOColumn {
                get {
                    return this.columnCONVEY_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DESTINATIONColumn {
                get {
                    return this.columnDESTINATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PLANEColumn {
                get {
                    return this.columnPLANE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TERMINALColumn {
                get {
                    return this.columnTERMINAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VALIDColumn {
                get {
                    return this.columnVALID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CO_SHAREColumn {
                get {
                    return this.columnCO_SHARE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FIDS_2DAYRow this[int index] {
                get {
                    return ((FIDS_2DAYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FIDS_2DAYRowChangeEventHandler FIDS_2DAYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FIDS_2DAYRowChangeEventHandler FIDS_2DAYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FIDS_2DAYRowChangeEventHandler FIDS_2DAYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FIDS_2DAYRowChangeEventHandler FIDS_2DAYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddFIDS_2DAYRow(FIDS_2DAYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FIDS_2DAYRow AddFIDS_2DAYRow(string FIDS_DATE, string FLIGHT_NO, string TYPE, string STD, string ETD, string ATD, string CONVEY_NO, string DESTINATION, string PLANE, string REMARK, string TERMINAL, string VALID, string CO_SHARE) {
                FIDS_2DAYRow rowFIDS_2DAYRow = ((FIDS_2DAYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FIDS_DATE,
                        FLIGHT_NO,
                        TYPE,
                        STD,
                        ETD,
                        ATD,
                        CONVEY_NO,
                        DESTINATION,
                        PLANE,
                        REMARK,
                        TERMINAL,
                        VALID,
                        CO_SHARE};
                rowFIDS_2DAYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFIDS_2DAYRow);
                return rowFIDS_2DAYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FIDS_2DAYRow FindByFIDS_DATEFLIGHT_NOTYPE(string FIDS_DATE, string FLIGHT_NO, string TYPE) {
                return ((FIDS_2DAYRow)(this.Rows.Find(new object[] {
                            FIDS_DATE,
                            FLIGHT_NO,
                            TYPE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FIDS_2DAYDataTable cln = ((FIDS_2DAYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FIDS_2DAYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnFIDS_DATE = base.Columns["FIDS_DATE"];
                this.columnFLIGHT_NO = base.Columns["FLIGHT_NO"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnSTD = base.Columns["STD"];
                this.columnETD = base.Columns["ETD"];
                this.columnATD = base.Columns["ATD"];
                this.columnCONVEY_NO = base.Columns["CONVEY_NO"];
                this.columnDESTINATION = base.Columns["DESTINATION"];
                this.columnPLANE = base.Columns["PLANE"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnTERMINAL = base.Columns["TERMINAL"];
                this.columnVALID = base.Columns["VALID"];
                this.columnCO_SHARE = base.Columns["CO_SHARE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnFIDS_DATE = new global::System.Data.DataColumn("FIDS_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIDS_DATE);
                this.columnFLIGHT_NO = new global::System.Data.DataColumn("FLIGHT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLIGHT_NO);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnSTD = new global::System.Data.DataColumn("STD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTD);
                this.columnETD = new global::System.Data.DataColumn("ETD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETD);
                this.columnATD = new global::System.Data.DataColumn("ATD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATD);
                this.columnCONVEY_NO = new global::System.Data.DataColumn("CONVEY_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONVEY_NO);
                this.columnDESTINATION = new global::System.Data.DataColumn("DESTINATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESTINATION);
                this.columnPLANE = new global::System.Data.DataColumn("PLANE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANE);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnTERMINAL = new global::System.Data.DataColumn("TERMINAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMINAL);
                this.columnVALID = new global::System.Data.DataColumn("VALID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALID);
                this.columnCO_SHARE = new global::System.Data.DataColumn("CO_SHARE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO_SHARE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFIDS_DATE,
                                this.columnFLIGHT_NO,
                                this.columnTYPE}, true));
                this.columnFIDS_DATE.AllowDBNull = false;
                this.columnFIDS_DATE.MaxLength = 8;
                this.columnFLIGHT_NO.AllowDBNull = false;
                this.columnFLIGHT_NO.MaxLength = 8;
                this.columnTYPE.AllowDBNull = false;
                this.columnTYPE.MaxLength = 1;
                this.columnSTD.AllowDBNull = false;
                this.columnSTD.MaxLength = 12;
                this.columnETD.AllowDBNull = false;
                this.columnETD.MaxLength = 12;
                this.columnATD.AllowDBNull = false;
                this.columnATD.MaxLength = 12;
                this.columnCONVEY_NO.MaxLength = 4;
                this.columnDESTINATION.AllowDBNull = false;
                this.columnDESTINATION.MaxLength = 4;
                this.columnPLANE.MaxLength = 10;
                this.columnREMARK.MaxLength = 20;
                this.columnTERMINAL.AllowDBNull = false;
                this.columnTERMINAL.MaxLength = 2;
                this.columnVALID.MaxLength = 1;
                this.columnCO_SHARE.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FIDS_2DAYRow NewFIDS_2DAYRow() {
                return ((FIDS_2DAYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FIDS_2DAYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FIDS_2DAYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FIDS_2DAYRowChanged != null)) {
                    this.FIDS_2DAYRowChanged(this, new FIDS_2DAYRowChangeEvent(((FIDS_2DAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FIDS_2DAYRowChanging != null)) {
                    this.FIDS_2DAYRowChanging(this, new FIDS_2DAYRowChangeEvent(((FIDS_2DAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FIDS_2DAYRowDeleted != null)) {
                    this.FIDS_2DAYRowDeleted(this, new FIDS_2DAYRowChangeEvent(((FIDS_2DAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FIDS_2DAYRowDeleting != null)) {
                    this.FIDS_2DAYRowDeleting(this, new FIDS_2DAYRowChangeEvent(((FIDS_2DAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveFIDS_2DAYRow(FIDS_2DAYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                T1_BHS_DataSet ds = new T1_BHS_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FIDS_2DAYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LATERAL_CONFDataTable : global::System.Data.TypedTableBase<LATERAL_CONFRow> {
            
            private global::System.Data.DataColumn columnLATERAL_ID;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnAREA;
            
            private global::System.Data.DataColumn columnCHINESE;
            
            private global::System.Data.DataColumn columnALIAS;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnIN_USE;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnDATE_TIME;
            
            private global::System.Data.DataColumn columnSORT_CHUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LATERAL_CONFDataTable() {
                this.TableName = "LATERAL_CONF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LATERAL_CONFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected LATERAL_CONFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LATERAL_IDColumn {
                get {
                    return this.columnLATERAL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AREAColumn {
                get {
                    return this.columnAREA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CHINESEColumn {
                get {
                    return this.columnCHINESE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ALIASColumn {
                get {
                    return this.columnALIAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IN_USEColumn {
                get {
                    return this.columnIN_USE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DATE_TIMEColumn {
                get {
                    return this.columnDATE_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SORT_CHUTEColumn {
                get {
                    return this.columnSORT_CHUTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LATERAL_CONFRow this[int index] {
                get {
                    return ((LATERAL_CONFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LATERAL_CONFRowChangeEventHandler LATERAL_CONFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LATERAL_CONFRowChangeEventHandler LATERAL_CONFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LATERAL_CONFRowChangeEventHandler LATERAL_CONFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LATERAL_CONFRowChangeEventHandler LATERAL_CONFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddLATERAL_CONFRow(LATERAL_CONFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LATERAL_CONFRow AddLATERAL_CONFRow(string LATERAL_ID, string TYPE, string AREA, string CHINESE, string ALIAS, string REMARK, string IN_USE, string USER_ID, string DATE_TIME, string SORT_CHUTE) {
                LATERAL_CONFRow rowLATERAL_CONFRow = ((LATERAL_CONFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LATERAL_ID,
                        TYPE,
                        AREA,
                        CHINESE,
                        ALIAS,
                        REMARK,
                        IN_USE,
                        USER_ID,
                        DATE_TIME,
                        SORT_CHUTE};
                rowLATERAL_CONFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLATERAL_CONFRow);
                return rowLATERAL_CONFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LATERAL_CONFRow FindByLATERAL_ID(string LATERAL_ID) {
                return ((LATERAL_CONFRow)(this.Rows.Find(new object[] {
                            LATERAL_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LATERAL_CONFDataTable cln = ((LATERAL_CONFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LATERAL_CONFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnLATERAL_ID = base.Columns["LATERAL_ID"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnAREA = base.Columns["AREA"];
                this.columnCHINESE = base.Columns["CHINESE"];
                this.columnALIAS = base.Columns["ALIAS"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnIN_USE = base.Columns["IN_USE"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnDATE_TIME = base.Columns["DATE_TIME"];
                this.columnSORT_CHUTE = base.Columns["SORT_CHUTE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnLATERAL_ID = new global::System.Data.DataColumn("LATERAL_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATERAL_ID);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnAREA = new global::System.Data.DataColumn("AREA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA);
                this.columnCHINESE = new global::System.Data.DataColumn("CHINESE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHINESE);
                this.columnALIAS = new global::System.Data.DataColumn("ALIAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALIAS);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnIN_USE = new global::System.Data.DataColumn("IN_USE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_USE);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnDATE_TIME = new global::System.Data.DataColumn("DATE_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_TIME);
                this.columnSORT_CHUTE = new global::System.Data.DataColumn("SORT_CHUTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT_CHUTE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLATERAL_ID}, true));
                this.columnLATERAL_ID.AllowDBNull = false;
                this.columnLATERAL_ID.Unique = true;
                this.columnLATERAL_ID.MaxLength = 12;
                this.columnTYPE.AllowDBNull = false;
                this.columnTYPE.MaxLength = 1;
                this.columnAREA.AllowDBNull = false;
                this.columnAREA.MaxLength = 1;
                this.columnCHINESE.AllowDBNull = false;
                this.columnCHINESE.MaxLength = 50;
                this.columnALIAS.AllowDBNull = false;
                this.columnALIAS.MaxLength = 8;
                this.columnREMARK.AllowDBNull = false;
                this.columnREMARK.MaxLength = 20;
                this.columnIN_USE.AllowDBNull = false;
                this.columnIN_USE.MaxLength = 1;
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.MaxLength = 20;
                this.columnDATE_TIME.AllowDBNull = false;
                this.columnDATE_TIME.MaxLength = 20;
                this.columnSORT_CHUTE.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LATERAL_CONFRow NewLATERAL_CONFRow() {
                return ((LATERAL_CONFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LATERAL_CONFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LATERAL_CONFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LATERAL_CONFRowChanged != null)) {
                    this.LATERAL_CONFRowChanged(this, new LATERAL_CONFRowChangeEvent(((LATERAL_CONFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LATERAL_CONFRowChanging != null)) {
                    this.LATERAL_CONFRowChanging(this, new LATERAL_CONFRowChangeEvent(((LATERAL_CONFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LATERAL_CONFRowDeleted != null)) {
                    this.LATERAL_CONFRowDeleted(this, new LATERAL_CONFRowChangeEvent(((LATERAL_CONFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LATERAL_CONFRowDeleting != null)) {
                    this.LATERAL_CONFRowDeleting(this, new LATERAL_CONFRowChangeEvent(((LATERAL_CONFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveLATERAL_CONFRow(LATERAL_CONFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                T1_BHS_DataSet ds = new T1_BHS_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LATERAL_CONFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOOK_UPDataTable : global::System.Data.TypedTableBase<LOOK_UPRow> {
            
            private global::System.Data.DataColumn columnLOOK_ID;
            
            private global::System.Data.DataColumn columnVALUE_1;
            
            private global::System.Data.DataColumn columnVALUE_2;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnUPD_USER;
            
            private global::System.Data.DataColumn columnDATE_TIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LOOK_UPDataTable() {
                this.TableName = "LOOK_UP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LOOK_UPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected LOOK_UPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOOK_IDColumn {
                get {
                    return this.columnLOOK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VALUE_1Column {
                get {
                    return this.columnVALUE_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VALUE_2Column {
                get {
                    return this.columnVALUE_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UPD_USERColumn {
                get {
                    return this.columnUPD_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DATE_TIMEColumn {
                get {
                    return this.columnDATE_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LOOK_UPRow this[int index] {
                get {
                    return ((LOOK_UPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LOOK_UPRowChangeEventHandler LOOK_UPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LOOK_UPRowChangeEventHandler LOOK_UPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LOOK_UPRowChangeEventHandler LOOK_UPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LOOK_UPRowChangeEventHandler LOOK_UPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddLOOK_UPRow(LOOK_UPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LOOK_UPRow AddLOOK_UPRow(string LOOK_ID, string VALUE_1, string VALUE_2, string REMARK, string UPD_USER, string DATE_TIME) {
                LOOK_UPRow rowLOOK_UPRow = ((LOOK_UPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOOK_ID,
                        VALUE_1,
                        VALUE_2,
                        REMARK,
                        UPD_USER,
                        DATE_TIME};
                rowLOOK_UPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOOK_UPRow);
                return rowLOOK_UPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LOOK_UPRow FindByLOOK_ID(string LOOK_ID) {
                return ((LOOK_UPRow)(this.Rows.Find(new object[] {
                            LOOK_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LOOK_UPDataTable cln = ((LOOK_UPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOOK_UPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnLOOK_ID = base.Columns["LOOK_ID"];
                this.columnVALUE_1 = base.Columns["VALUE_1"];
                this.columnVALUE_2 = base.Columns["VALUE_2"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnUPD_USER = base.Columns["UPD_USER"];
                this.columnDATE_TIME = base.Columns["DATE_TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnLOOK_ID = new global::System.Data.DataColumn("LOOK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOOK_ID);
                this.columnVALUE_1 = new global::System.Data.DataColumn("VALUE_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE_1);
                this.columnVALUE_2 = new global::System.Data.DataColumn("VALUE_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE_2);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnUPD_USER = new global::System.Data.DataColumn("UPD_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPD_USER);
                this.columnDATE_TIME = new global::System.Data.DataColumn("DATE_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_TIME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOOK_ID}, true));
                this.columnLOOK_ID.AllowDBNull = false;
                this.columnLOOK_ID.Unique = true;
                this.columnLOOK_ID.MaxLength = 20;
                this.columnVALUE_1.AllowDBNull = false;
                this.columnVALUE_1.MaxLength = 10;
                this.columnVALUE_2.AllowDBNull = false;
                this.columnVALUE_2.MaxLength = 10;
                this.columnREMARK.AllowDBNull = false;
                this.columnREMARK.MaxLength = 80;
                this.columnUPD_USER.AllowDBNull = false;
                this.columnUPD_USER.MaxLength = 20;
                this.columnDATE_TIME.AllowDBNull = false;
                this.columnDATE_TIME.MaxLength = 16;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LOOK_UPRow NewLOOK_UPRow() {
                return ((LOOK_UPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOOK_UPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LOOK_UPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOOK_UPRowChanged != null)) {
                    this.LOOK_UPRowChanged(this, new LOOK_UPRowChangeEvent(((LOOK_UPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOOK_UPRowChanging != null)) {
                    this.LOOK_UPRowChanging(this, new LOOK_UPRowChangeEvent(((LOOK_UPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOOK_UPRowDeleted != null)) {
                    this.LOOK_UPRowDeleted(this, new LOOK_UPRowChangeEvent(((LOOK_UPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOOK_UPRowDeleting != null)) {
                    this.LOOK_UPRowDeleting(this, new LOOK_UPRowChangeEvent(((LOOK_UPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveLOOK_UPRow(LOOK_UPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                T1_BHS_DataSet ds = new T1_BHS_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOOK_UPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MAKEUP_ALLOCDataTable : global::System.Data.TypedTableBase<MAKEUP_ALLOCRow> {
            
            private global::System.Data.DataColumn columnFIDS_DATE;
            
            private global::System.Data.DataColumn columnFLIGHT_NO;
            
            private global::System.Data.DataColumn columnSTD;
            
            private global::System.Data.DataColumn columnPRIORITY;
            
            private global::System.Data.DataColumn columnDESTINATION;
            
            private global::System.Data.DataColumn columnCABIN_CLASS;
            
            private global::System.Data.DataColumn columnLATERAL_ID;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnDATE_TIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAKEUP_ALLOCDataTable() {
                this.TableName = "MAKEUP_ALLOC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MAKEUP_ALLOCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected MAKEUP_ALLOCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FIDS_DATEColumn {
                get {
                    return this.columnFIDS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FLIGHT_NOColumn {
                get {
                    return this.columnFLIGHT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn STDColumn {
                get {
                    return this.columnSTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PRIORITYColumn {
                get {
                    return this.columnPRIORITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DESTINATIONColumn {
                get {
                    return this.columnDESTINATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CABIN_CLASSColumn {
                get {
                    return this.columnCABIN_CLASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LATERAL_IDColumn {
                get {
                    return this.columnLATERAL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DATE_TIMEColumn {
                get {
                    return this.columnDATE_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAKEUP_ALLOCRow this[int index] {
                get {
                    return ((MAKEUP_ALLOCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAKEUP_ALLOCRowChangeEventHandler MAKEUP_ALLOCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAKEUP_ALLOCRowChangeEventHandler MAKEUP_ALLOCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAKEUP_ALLOCRowChangeEventHandler MAKEUP_ALLOCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MAKEUP_ALLOCRowChangeEventHandler MAKEUP_ALLOCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddMAKEUP_ALLOCRow(MAKEUP_ALLOCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAKEUP_ALLOCRow AddMAKEUP_ALLOCRow(string FIDS_DATE, string FLIGHT_NO, string STD, int PRIORITY, string DESTINATION, string CABIN_CLASS, string LATERAL_ID, string USER_ID, string DATE_TIME) {
                MAKEUP_ALLOCRow rowMAKEUP_ALLOCRow = ((MAKEUP_ALLOCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FIDS_DATE,
                        FLIGHT_NO,
                        STD,
                        PRIORITY,
                        DESTINATION,
                        CABIN_CLASS,
                        LATERAL_ID,
                        USER_ID,
                        DATE_TIME};
                rowMAKEUP_ALLOCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMAKEUP_ALLOCRow);
                return rowMAKEUP_ALLOCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAKEUP_ALLOCRow FindByFIDS_DATEFLIGHT_NOPRIORITY(string FIDS_DATE, string FLIGHT_NO, int PRIORITY) {
                return ((MAKEUP_ALLOCRow)(this.Rows.Find(new object[] {
                            FIDS_DATE,
                            FLIGHT_NO,
                            PRIORITY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MAKEUP_ALLOCDataTable cln = ((MAKEUP_ALLOCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MAKEUP_ALLOCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnFIDS_DATE = base.Columns["FIDS_DATE"];
                this.columnFLIGHT_NO = base.Columns["FLIGHT_NO"];
                this.columnSTD = base.Columns["STD"];
                this.columnPRIORITY = base.Columns["PRIORITY"];
                this.columnDESTINATION = base.Columns["DESTINATION"];
                this.columnCABIN_CLASS = base.Columns["CABIN_CLASS"];
                this.columnLATERAL_ID = base.Columns["LATERAL_ID"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnDATE_TIME = base.Columns["DATE_TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnFIDS_DATE = new global::System.Data.DataColumn("FIDS_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIDS_DATE);
                this.columnFLIGHT_NO = new global::System.Data.DataColumn("FLIGHT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLIGHT_NO);
                this.columnSTD = new global::System.Data.DataColumn("STD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTD);
                this.columnPRIORITY = new global::System.Data.DataColumn("PRIORITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIORITY);
                this.columnDESTINATION = new global::System.Data.DataColumn("DESTINATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESTINATION);
                this.columnCABIN_CLASS = new global::System.Data.DataColumn("CABIN_CLASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCABIN_CLASS);
                this.columnLATERAL_ID = new global::System.Data.DataColumn("LATERAL_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATERAL_ID);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnDATE_TIME = new global::System.Data.DataColumn("DATE_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_TIME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFIDS_DATE,
                                this.columnFLIGHT_NO,
                                this.columnPRIORITY}, true));
                this.columnFIDS_DATE.AllowDBNull = false;
                this.columnFIDS_DATE.MaxLength = 8;
                this.columnFLIGHT_NO.AllowDBNull = false;
                this.columnFLIGHT_NO.MaxLength = 8;
                this.columnSTD.AllowDBNull = false;
                this.columnSTD.MaxLength = 12;
                this.columnPRIORITY.AllowDBNull = false;
                this.columnDESTINATION.AllowDBNull = false;
                this.columnDESTINATION.MaxLength = 4;
                this.columnCABIN_CLASS.AllowDBNull = false;
                this.columnCABIN_CLASS.MaxLength = 1;
                this.columnLATERAL_ID.AllowDBNull = false;
                this.columnLATERAL_ID.MaxLength = 12;
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.MaxLength = 20;
                this.columnDATE_TIME.AllowDBNull = false;
                this.columnDATE_TIME.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAKEUP_ALLOCRow NewMAKEUP_ALLOCRow() {
                return ((MAKEUP_ALLOCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MAKEUP_ALLOCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MAKEUP_ALLOCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MAKEUP_ALLOCRowChanged != null)) {
                    this.MAKEUP_ALLOCRowChanged(this, new MAKEUP_ALLOCRowChangeEvent(((MAKEUP_ALLOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MAKEUP_ALLOCRowChanging != null)) {
                    this.MAKEUP_ALLOCRowChanging(this, new MAKEUP_ALLOCRowChangeEvent(((MAKEUP_ALLOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MAKEUP_ALLOCRowDeleted != null)) {
                    this.MAKEUP_ALLOCRowDeleted(this, new MAKEUP_ALLOCRowChangeEvent(((MAKEUP_ALLOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MAKEUP_ALLOCRowDeleting != null)) {
                    this.MAKEUP_ALLOCRowDeleting(this, new MAKEUP_ALLOCRowChangeEvent(((MAKEUP_ALLOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveMAKEUP_ALLOCRow(MAKEUP_ALLOCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                T1_BHS_DataSet ds = new T1_BHS_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MAKEUP_ALLOCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FIDS_2DAYRow : global::System.Data.DataRow {
            
            private FIDS_2DAYDataTable tableFIDS_2DAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal FIDS_2DAYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFIDS_2DAY = ((FIDS_2DAYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FIDS_DATE {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.FIDS_DATEColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.FIDS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FLIGHT_NO {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.FLIGHT_NOColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.FLIGHT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TYPE {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.TYPEColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string STD {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.STDColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.STDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ETD {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.ETDColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.ETDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ATD {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.ATDColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.ATDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CONVEY_NO {
                get {
                    try {
                        return ((string)(this[this.tableFIDS_2DAY.CONVEY_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONVEY_NO\' in table \'FIDS_2DAY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFIDS_2DAY.CONVEY_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DESTINATION {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.DESTINATIONColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.DESTINATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PLANE {
                get {
                    try {
                        return ((string)(this[this.tableFIDS_2DAY.PLANEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLANE\' in table \'FIDS_2DAY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFIDS_2DAY.PLANEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableFIDS_2DAY.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARK\' in table \'FIDS_2DAY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFIDS_2DAY.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TERMINAL {
                get {
                    return ((string)(this[this.tableFIDS_2DAY.TERMINALColumn]));
                }
                set {
                    this[this.tableFIDS_2DAY.TERMINALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VALID {
                get {
                    try {
                        return ((string)(this[this.tableFIDS_2DAY.VALIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALID\' in table \'FIDS_2DAY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFIDS_2DAY.VALIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CO_SHARE {
                get {
                    try {
                        return ((string)(this[this.tableFIDS_2DAY.CO_SHAREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO_SHARE\' in table \'FIDS_2DAY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFIDS_2DAY.CO_SHAREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCONVEY_NONull() {
                return this.IsNull(this.tableFIDS_2DAY.CONVEY_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCONVEY_NONull() {
                this[this.tableFIDS_2DAY.CONVEY_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPLANENull() {
                return this.IsNull(this.tableFIDS_2DAY.PLANEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPLANENull() {
                this[this.tableFIDS_2DAY.PLANEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableFIDS_2DAY.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetREMARKNull() {
                this[this.tableFIDS_2DAY.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVALIDNull() {
                return this.IsNull(this.tableFIDS_2DAY.VALIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVALIDNull() {
                this[this.tableFIDS_2DAY.VALIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCO_SHARENull() {
                return this.IsNull(this.tableFIDS_2DAY.CO_SHAREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCO_SHARENull() {
                this[this.tableFIDS_2DAY.CO_SHAREColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LATERAL_CONFRow : global::System.Data.DataRow {
            
            private LATERAL_CONFDataTable tableLATERAL_CONF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LATERAL_CONFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLATERAL_CONF = ((LATERAL_CONFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LATERAL_ID {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.LATERAL_IDColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.LATERAL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TYPE {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.TYPEColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AREA {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.AREAColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.AREAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CHINESE {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.CHINESEColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.CHINESEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ALIAS {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.ALIASColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.ALIASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string REMARK {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.REMARKColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IN_USE {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.IN_USEColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.IN_USEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.USER_IDColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DATE_TIME {
                get {
                    return ((string)(this[this.tableLATERAL_CONF.DATE_TIMEColumn]));
                }
                set {
                    this[this.tableLATERAL_CONF.DATE_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SORT_CHUTE {
                get {
                    try {
                        return ((string)(this[this.tableLATERAL_CONF.SORT_CHUTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SORT_CHUTE\' in table \'LATERAL_CONF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLATERAL_CONF.SORT_CHUTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSORT_CHUTENull() {
                return this.IsNull(this.tableLATERAL_CONF.SORT_CHUTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSORT_CHUTENull() {
                this[this.tableLATERAL_CONF.SORT_CHUTEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LOOK_UPRow : global::System.Data.DataRow {
            
            private LOOK_UPDataTable tableLOOK_UP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LOOK_UPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOOK_UP = ((LOOK_UPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LOOK_ID {
                get {
                    return ((string)(this[this.tableLOOK_UP.LOOK_IDColumn]));
                }
                set {
                    this[this.tableLOOK_UP.LOOK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VALUE_1 {
                get {
                    return ((string)(this[this.tableLOOK_UP.VALUE_1Column]));
                }
                set {
                    this[this.tableLOOK_UP.VALUE_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VALUE_2 {
                get {
                    return ((string)(this[this.tableLOOK_UP.VALUE_2Column]));
                }
                set {
                    this[this.tableLOOK_UP.VALUE_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string REMARK {
                get {
                    return ((string)(this[this.tableLOOK_UP.REMARKColumn]));
                }
                set {
                    this[this.tableLOOK_UP.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UPD_USER {
                get {
                    return ((string)(this[this.tableLOOK_UP.UPD_USERColumn]));
                }
                set {
                    this[this.tableLOOK_UP.UPD_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DATE_TIME {
                get {
                    return ((string)(this[this.tableLOOK_UP.DATE_TIMEColumn]));
                }
                set {
                    this[this.tableLOOK_UP.DATE_TIMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MAKEUP_ALLOCRow : global::System.Data.DataRow {
            
            private MAKEUP_ALLOCDataTable tableMAKEUP_ALLOC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MAKEUP_ALLOCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMAKEUP_ALLOC = ((MAKEUP_ALLOCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FIDS_DATE {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.FIDS_DATEColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.FIDS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FLIGHT_NO {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.FLIGHT_NOColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.FLIGHT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string STD {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.STDColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.STDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PRIORITY {
                get {
                    return ((int)(this[this.tableMAKEUP_ALLOC.PRIORITYColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.PRIORITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DESTINATION {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.DESTINATIONColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.DESTINATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CABIN_CLASS {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.CABIN_CLASSColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.CABIN_CLASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LATERAL_ID {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.LATERAL_IDColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.LATERAL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.USER_IDColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DATE_TIME {
                get {
                    return ((string)(this[this.tableMAKEUP_ALLOC.DATE_TIMEColumn]));
                }
                set {
                    this[this.tableMAKEUP_ALLOC.DATE_TIMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class FIDS_2DAYRowChangeEvent : global::System.EventArgs {
            
            private FIDS_2DAYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FIDS_2DAYRowChangeEvent(FIDS_2DAYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FIDS_2DAYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class LATERAL_CONFRowChangeEvent : global::System.EventArgs {
            
            private LATERAL_CONFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LATERAL_CONFRowChangeEvent(LATERAL_CONFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LATERAL_CONFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class LOOK_UPRowChangeEvent : global::System.EventArgs {
            
            private LOOK_UPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LOOK_UPRowChangeEvent(LOOK_UPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LOOK_UPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class MAKEUP_ALLOCRowChangeEvent : global::System.EventArgs {
            
            private MAKEUP_ALLOCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAKEUP_ALLOCRowChangeEvent(MAKEUP_ALLOCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MAKEUP_ALLOCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace T1_BHS_OAS.T1_BHSDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FIDS_2DAYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public FIDS_2DAYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FIDS_2DAY";
            tableMapping.ColumnMappings.Add("FIDS_DATE", "FIDS_DATE");
            tableMapping.ColumnMappings.Add("FLIGHT_NO", "FLIGHT_NO");
            tableMapping.ColumnMappings.Add("TYPE", "TYPE");
            tableMapping.ColumnMappings.Add("STD", "STD");
            tableMapping.ColumnMappings.Add("ETD", "ETD");
            tableMapping.ColumnMappings.Add("ATD", "ATD");
            tableMapping.ColumnMappings.Add("CONVEY_NO", "CONVEY_NO");
            tableMapping.ColumnMappings.Add("DESTINATION", "DESTINATION");
            tableMapping.ColumnMappings.Add("PLANE", "PLANE");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("TERMINAL", "TERMINAL");
            tableMapping.ColumnMappings.Add("VALID", "VALID");
            tableMapping.ColumnMappings.Add("CO_SHARE", "CO_SHARE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FIDS_2DAY] WHERE (([FIDS_DATE] = @Original_FIDS_DATE) AND ([FLIGHT_NO] = @Original_FLIGHT_NO) AND ([TYPE] = @Original_TYPE) AND ([STD] = @Original_STD) AND ([ETD] = @Original_ETD) AND ([ATD] = @Original_ATD) AND ((@IsNull_CONVEY_NO = 1 AND [CONVEY_NO] IS NULL) OR ([CONVEY_NO] = @Original_CONVEY_NO)) AND ([DESTINATION] = @Original_DESTINATION) AND ((@IsNull_PLANE = 1 AND [PLANE] IS NULL) OR ([PLANE] = @Original_PLANE)) AND ((@IsNull_REMARK = 1 AND [REMARK] IS NULL) OR ([REMARK] = @Original_REMARK)) AND ([TERMINAL] = @Original_TERMINAL) AND ((@IsNull_VALID = 1 AND [VALID] IS NULL) OR ([VALID] = @Original_VALID)) AND ((@IsNull_CO_SHARE = 1 AND [CO_SHARE] IS NULL) OR ([CO_SHARE] = @Original_CO_SHARE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONVEY_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONVEY_NO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONVEY_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONVEY_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PLANE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REMARK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TERMINAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TERMINAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CO_SHARE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CO_SHARE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CO_SHARE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CO_SHARE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FIDS_2DAY] ([FIDS_DATE], [FLIGHT_NO], [TYPE], [STD], [ETD], [ATD], [CONVEY_NO], [DESTINATION], [PLANE], [REMARK], [TERMINAL], [VALID], [CO_SHARE]) VALUES (@FIDS_DATE, @FLIGHT_NO, @TYPE, @STD, @ETD, @ATD, @CONVEY_NO, @DESTINATION, @PLANE, @REMARK, @TERMINAL, @VALID, @CO_SHARE);
SELECT FIDS_DATE, FLIGHT_NO, TYPE, STD, ETD, ATD, CONVEY_NO, DESTINATION, PLANE, REMARK, TERMINAL, VALID, CO_SHARE FROM FIDS_2DAY WHERE (FIDS_DATE = @FIDS_DATE) AND (FLIGHT_NO = @FLIGHT_NO) AND (TYPE = @TYPE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONVEY_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONVEY_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERMINAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TERMINAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CO_SHARE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CO_SHARE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FIDS_2DAY] SET [FIDS_DATE] = @FIDS_DATE, [FLIGHT_NO] = @FLIGHT_NO, [TYPE] = @TYPE, [STD] = @STD, [ETD] = @ETD, [ATD] = @ATD, [CONVEY_NO] = @CONVEY_NO, [DESTINATION] = @DESTINATION, [PLANE] = @PLANE, [REMARK] = @REMARK, [TERMINAL] = @TERMINAL, [VALID] = @VALID, [CO_SHARE] = @CO_SHARE WHERE (([FIDS_DATE] = @Original_FIDS_DATE) AND ([FLIGHT_NO] = @Original_FLIGHT_NO) AND ([TYPE] = @Original_TYPE) AND ([STD] = @Original_STD) AND ([ETD] = @Original_ETD) AND ([ATD] = @Original_ATD) AND ((@IsNull_CONVEY_NO = 1 AND [CONVEY_NO] IS NULL) OR ([CONVEY_NO] = @Original_CONVEY_NO)) AND ([DESTINATION] = @Original_DESTINATION) AND ((@IsNull_PLANE = 1 AND [PLANE] IS NULL) OR ([PLANE] = @Original_PLANE)) AND ((@IsNull_REMARK = 1 AND [REMARK] IS NULL) OR ([REMARK] = @Original_REMARK)) AND ([TERMINAL] = @Original_TERMINAL) AND ((@IsNull_VALID = 1 AND [VALID] IS NULL) OR ([VALID] = @Original_VALID)) AND ((@IsNull_CO_SHARE = 1 AND [CO_SHARE] IS NULL) OR ([CO_SHARE] = @Original_CO_SHARE)));
SELECT FIDS_DATE, FLIGHT_NO, TYPE, STD, ETD, ATD, CONVEY_NO, DESTINATION, PLANE, REMARK, TERMINAL, VALID, CO_SHARE FROM FIDS_2DAY WHERE (FIDS_DATE = @FIDS_DATE) AND (FLIGHT_NO = @FLIGHT_NO) AND (TYPE = @TYPE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONVEY_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONVEY_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERMINAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TERMINAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CO_SHARE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CO_SHARE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONVEY_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONVEY_NO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONVEY_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONVEY_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PLANE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REMARK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TERMINAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TERMINAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VALID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CO_SHARE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CO_SHARE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CO_SHARE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CO_SHARE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::T1_BHS_OAS.Properties.Settings.Default.T1_BHS_DB;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FIDS_DATE, FLIGHT_NO, TYPE, STD, ETD, ATD, CONVEY_NO, DESTINATION, PLANE, " +
                "REMARK, TERMINAL, VALID, CO_SHARE FROM dbo.FIDS_2DAY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(T1_BHS_DataSet.FIDS_2DAYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual T1_BHS_DataSet.FIDS_2DAYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            T1_BHS_DataSet.FIDS_2DAYDataTable dataTable = new T1_BHS_DataSet.FIDS_2DAYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet.FIDS_2DAYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet dataSet) {
            return this.Adapter.Update(dataSet, "FIDS_2DAY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_FIDS_DATE, string Original_FLIGHT_NO, string Original_TYPE, string Original_STD, string Original_ETD, string Original_ATD, string Original_CONVEY_NO, string Original_DESTINATION, string Original_PLANE, string Original_REMARK, string Original_TERMINAL, string Original_VALID, string Original_CO_SHARE) {
            if ((Original_FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_FIDS_DATE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FIDS_DATE));
            }
            if ((Original_FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_FLIGHT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FLIGHT_NO));
            }
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TYPE));
            }
            if ((Original_STD == null)) {
                throw new global::System.ArgumentNullException("Original_STD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STD));
            }
            if ((Original_ETD == null)) {
                throw new global::System.ArgumentNullException("Original_ETD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ETD));
            }
            if ((Original_ATD == null)) {
                throw new global::System.ArgumentNullException("Original_ATD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ATD));
            }
            if ((Original_CONVEY_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_CONVEY_NO));
            }
            if ((Original_DESTINATION == null)) {
                throw new global::System.ArgumentNullException("Original_DESTINATION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DESTINATION));
            }
            if ((Original_PLANE == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_PLANE));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_REMARK));
            }
            if ((Original_TERMINAL == null)) {
                throw new global::System.ArgumentNullException("Original_TERMINAL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_TERMINAL));
            }
            if ((Original_VALID == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_VALID));
            }
            if ((Original_CO_SHARE == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_CO_SHARE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FIDS_DATE, string FLIGHT_NO, string TYPE, string STD, string ETD, string ATD, string CONVEY_NO, string DESTINATION, string PLANE, string REMARK, string TERMINAL, string VALID, string CO_SHARE) {
            if ((FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("FIDS_DATE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FIDS_DATE));
            }
            if ((FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("FLIGHT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FLIGHT_NO));
            }
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TYPE));
            }
            if ((STD == null)) {
                throw new global::System.ArgumentNullException("STD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STD));
            }
            if ((ETD == null)) {
                throw new global::System.ArgumentNullException("ETD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ETD));
            }
            if ((ATD == null)) {
                throw new global::System.ArgumentNullException("ATD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ATD));
            }
            if ((CONVEY_NO == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CONVEY_NO));
            }
            if ((DESTINATION == null)) {
                throw new global::System.ArgumentNullException("DESTINATION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DESTINATION));
            }
            if ((PLANE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PLANE));
            }
            if ((REMARK == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(REMARK));
            }
            if ((TERMINAL == null)) {
                throw new global::System.ArgumentNullException("TERMINAL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(TERMINAL));
            }
            if ((VALID == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(VALID));
            }
            if ((CO_SHARE == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(CO_SHARE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FIDS_DATE, 
                    string FLIGHT_NO, 
                    string TYPE, 
                    string STD, 
                    string ETD, 
                    string ATD, 
                    string CONVEY_NO, 
                    string DESTINATION, 
                    string PLANE, 
                    string REMARK, 
                    string TERMINAL, 
                    string VALID, 
                    string CO_SHARE, 
                    string Original_FIDS_DATE, 
                    string Original_FLIGHT_NO, 
                    string Original_TYPE, 
                    string Original_STD, 
                    string Original_ETD, 
                    string Original_ATD, 
                    string Original_CONVEY_NO, 
                    string Original_DESTINATION, 
                    string Original_PLANE, 
                    string Original_REMARK, 
                    string Original_TERMINAL, 
                    string Original_VALID, 
                    string Original_CO_SHARE) {
            if ((FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("FIDS_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FIDS_DATE));
            }
            if ((FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("FLIGHT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FLIGHT_NO));
            }
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TYPE));
            }
            if ((STD == null)) {
                throw new global::System.ArgumentNullException("STD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STD));
            }
            if ((ETD == null)) {
                throw new global::System.ArgumentNullException("ETD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ETD));
            }
            if ((ATD == null)) {
                throw new global::System.ArgumentNullException("ATD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ATD));
            }
            if ((CONVEY_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CONVEY_NO));
            }
            if ((DESTINATION == null)) {
                throw new global::System.ArgumentNullException("DESTINATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DESTINATION));
            }
            if ((PLANE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(PLANE));
            }
            if ((REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(REMARK));
            }
            if ((TERMINAL == null)) {
                throw new global::System.ArgumentNullException("TERMINAL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(TERMINAL));
            }
            if ((VALID == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(VALID));
            }
            if ((CO_SHARE == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(CO_SHARE));
            }
            if ((Original_FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_FIDS_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_FIDS_DATE));
            }
            if ((Original_FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_FLIGHT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_FLIGHT_NO));
            }
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_TYPE));
            }
            if ((Original_STD == null)) {
                throw new global::System.ArgumentNullException("Original_STD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_STD));
            }
            if ((Original_ETD == null)) {
                throw new global::System.ArgumentNullException("Original_ETD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ETD));
            }
            if ((Original_ATD == null)) {
                throw new global::System.ArgumentNullException("Original_ATD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ATD));
            }
            if ((Original_CONVEY_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CONVEY_NO));
            }
            if ((Original_DESTINATION == null)) {
                throw new global::System.ArgumentNullException("Original_DESTINATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_DESTINATION));
            }
            if ((Original_PLANE == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_PLANE));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_REMARK));
            }
            if ((Original_TERMINAL == null)) {
                throw new global::System.ArgumentNullException("Original_TERMINAL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_TERMINAL));
            }
            if ((Original_VALID == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_VALID));
            }
            if ((Original_CO_SHARE == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_CO_SHARE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STD, 
                    string ETD, 
                    string ATD, 
                    string CONVEY_NO, 
                    string DESTINATION, 
                    string PLANE, 
                    string REMARK, 
                    string TERMINAL, 
                    string VALID, 
                    string CO_SHARE, 
                    string Original_FIDS_DATE, 
                    string Original_FLIGHT_NO, 
                    string Original_TYPE, 
                    string Original_STD, 
                    string Original_ETD, 
                    string Original_ATD, 
                    string Original_CONVEY_NO, 
                    string Original_DESTINATION, 
                    string Original_PLANE, 
                    string Original_REMARK, 
                    string Original_TERMINAL, 
                    string Original_VALID, 
                    string Original_CO_SHARE) {
            return this.Update(Original_FIDS_DATE, Original_FLIGHT_NO, Original_TYPE, STD, ETD, ATD, CONVEY_NO, DESTINATION, PLANE, REMARK, TERMINAL, VALID, CO_SHARE, Original_FIDS_DATE, Original_FLIGHT_NO, Original_TYPE, Original_STD, Original_ETD, Original_ATD, Original_CONVEY_NO, Original_DESTINATION, Original_PLANE, Original_REMARK, Original_TERMINAL, Original_VALID, Original_CO_SHARE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LATERAL_CONFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public LATERAL_CONFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LATERAL_CONF";
            tableMapping.ColumnMappings.Add("LATERAL_ID", "LATERAL_ID");
            tableMapping.ColumnMappings.Add("TYPE", "TYPE");
            tableMapping.ColumnMappings.Add("AREA", "AREA");
            tableMapping.ColumnMappings.Add("CHINESE", "CHINESE");
            tableMapping.ColumnMappings.Add("ALIAS", "ALIAS");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("IN_USE", "IN_USE");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("DATE_TIME", "DATE_TIME");
            tableMapping.ColumnMappings.Add("SORT_CHUTE", "SORT_CHUTE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LATERAL_CONF] WHERE (([LATERAL_ID] = @Original_LATERAL_ID) AND ([TYPE] = @Original_TYPE) AND ([AREA] = @Original_AREA) AND ([CHINESE] = @Original_CHINESE) AND ([ALIAS] = @Original_ALIAS) AND ([REMARK] = @Original_REMARK) AND ([IN_USE] = @Original_IN_USE) AND ([USER_ID] = @Original_USER_ID) AND ([DATE_TIME] = @Original_DATE_TIME) AND ((@IsNull_SORT_CHUTE = 1 AND [SORT_CHUTE] IS NULL) OR ([SORT_CHUTE] = @Original_SORT_CHUTE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHINESE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHINESE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALIAS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_USE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_USE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SORT_CHUTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT_CHUTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SORT_CHUTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT_CHUTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LATERAL_CONF] ([LATERAL_ID], [TYPE], [AREA], [CHINESE], [ALIAS], [REMARK], [IN_USE], [USER_ID], [DATE_TIME], [SORT_CHUTE]) VALUES (@LATERAL_ID, @TYPE, @AREA, @CHINESE, @ALIAS, @REMARK, @IN_USE, @USER_ID, @DATE_TIME, @SORT_CHUTE);
SELECT LATERAL_ID, TYPE, AREA, CHINESE, ALIAS, REMARK, IN_USE, USER_ID, DATE_TIME, SORT_CHUTE FROM LATERAL_CONF WHERE (LATERAL_ID = @LATERAL_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHINESE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHINESE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALIAS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_USE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_USE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT_CHUTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT_CHUTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LATERAL_CONF] SET [LATERAL_ID] = @LATERAL_ID, [TYPE] = @TYPE, [AREA] = @AREA, [CHINESE] = @CHINESE, [ALIAS] = @ALIAS, [REMARK] = @REMARK, [IN_USE] = @IN_USE, [USER_ID] = @USER_ID, [DATE_TIME] = @DATE_TIME, [SORT_CHUTE] = @SORT_CHUTE WHERE (([LATERAL_ID] = @Original_LATERAL_ID) AND ([TYPE] = @Original_TYPE) AND ([AREA] = @Original_AREA) AND ([CHINESE] = @Original_CHINESE) AND ([ALIAS] = @Original_ALIAS) AND ([REMARK] = @Original_REMARK) AND ([IN_USE] = @Original_IN_USE) AND ([USER_ID] = @Original_USER_ID) AND ([DATE_TIME] = @Original_DATE_TIME) AND ((@IsNull_SORT_CHUTE = 1 AND [SORT_CHUTE] IS NULL) OR ([SORT_CHUTE] = @Original_SORT_CHUTE)));
SELECT LATERAL_ID, TYPE, AREA, CHINESE, ALIAS, REMARK, IN_USE, USER_ID, DATE_TIME, SORT_CHUTE FROM LATERAL_CONF WHERE (LATERAL_ID = @LATERAL_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHINESE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHINESE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALIAS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_USE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_USE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT_CHUTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT_CHUTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHINESE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHINESE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALIAS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALIAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_USE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_USE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SORT_CHUTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT_CHUTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SORT_CHUTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT_CHUTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::T1_BHS_OAS.Properties.Settings.Default.T1_BHS_DB;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LATERAL_ID, TYPE, AREA, CHINESE, ALIAS, REMARK, IN_USE, USER_ID, DATE_TIME" +
                ", SORT_CHUTE FROM dbo.LATERAL_CONF";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(T1_BHS_DataSet.LATERAL_CONFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual T1_BHS_DataSet.LATERAL_CONFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            T1_BHS_DataSet.LATERAL_CONFDataTable dataTable = new T1_BHS_DataSet.LATERAL_CONFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet.LATERAL_CONFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet dataSet) {
            return this.Adapter.Update(dataSet, "LATERAL_CONF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_LATERAL_ID, string Original_TYPE, string Original_AREA, string Original_CHINESE, string Original_ALIAS, string Original_REMARK, string Original_IN_USE, string Original_USER_ID, string Original_DATE_TIME, string Original_SORT_CHUTE) {
            if ((Original_LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("Original_LATERAL_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LATERAL_ID));
            }
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TYPE));
            }
            if ((Original_AREA == null)) {
                throw new global::System.ArgumentNullException("Original_AREA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_AREA));
            }
            if ((Original_CHINESE == null)) {
                throw new global::System.ArgumentNullException("Original_CHINESE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CHINESE));
            }
            if ((Original_ALIAS == null)) {
                throw new global::System.ArgumentNullException("Original_ALIAS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ALIAS));
            }
            if ((Original_REMARK == null)) {
                throw new global::System.ArgumentNullException("Original_REMARK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_REMARK));
            }
            if ((Original_IN_USE == null)) {
                throw new global::System.ArgumentNullException("Original_IN_USE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_IN_USE));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_USER_ID));
            }
            if ((Original_DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("Original_DATE_TIME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DATE_TIME));
            }
            if ((Original_SORT_CHUTE == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SORT_CHUTE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string LATERAL_ID, string TYPE, string AREA, string CHINESE, string ALIAS, string REMARK, string IN_USE, string USER_ID, string DATE_TIME, string SORT_CHUTE) {
            if ((LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("LATERAL_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LATERAL_ID));
            }
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TYPE));
            }
            if ((AREA == null)) {
                throw new global::System.ArgumentNullException("AREA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(AREA));
            }
            if ((CHINESE == null)) {
                throw new global::System.ArgumentNullException("CHINESE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CHINESE));
            }
            if ((ALIAS == null)) {
                throw new global::System.ArgumentNullException("ALIAS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ALIAS));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(REMARK));
            }
            if ((IN_USE == null)) {
                throw new global::System.ArgumentNullException("IN_USE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(IN_USE));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USER_ID));
            }
            if ((DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("DATE_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DATE_TIME));
            }
            if ((SORT_CHUTE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SORT_CHUTE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LATERAL_ID, 
                    string TYPE, 
                    string AREA, 
                    string CHINESE, 
                    string ALIAS, 
                    string REMARK, 
                    string IN_USE, 
                    string USER_ID, 
                    string DATE_TIME, 
                    string SORT_CHUTE, 
                    string Original_LATERAL_ID, 
                    string Original_TYPE, 
                    string Original_AREA, 
                    string Original_CHINESE, 
                    string Original_ALIAS, 
                    string Original_REMARK, 
                    string Original_IN_USE, 
                    string Original_USER_ID, 
                    string Original_DATE_TIME, 
                    string Original_SORT_CHUTE) {
            if ((LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("LATERAL_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LATERAL_ID));
            }
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TYPE));
            }
            if ((AREA == null)) {
                throw new global::System.ArgumentNullException("AREA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(AREA));
            }
            if ((CHINESE == null)) {
                throw new global::System.ArgumentNullException("CHINESE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CHINESE));
            }
            if ((ALIAS == null)) {
                throw new global::System.ArgumentNullException("ALIAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ALIAS));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(REMARK));
            }
            if ((IN_USE == null)) {
                throw new global::System.ArgumentNullException("IN_USE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(IN_USE));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USER_ID));
            }
            if ((DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("DATE_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(DATE_TIME));
            }
            if ((SORT_CHUTE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SORT_CHUTE));
            }
            if ((Original_LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("Original_LATERAL_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_LATERAL_ID));
            }
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TYPE));
            }
            if ((Original_AREA == null)) {
                throw new global::System.ArgumentNullException("Original_AREA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_AREA));
            }
            if ((Original_CHINESE == null)) {
                throw new global::System.ArgumentNullException("Original_CHINESE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_CHINESE));
            }
            if ((Original_ALIAS == null)) {
                throw new global::System.ArgumentNullException("Original_ALIAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ALIAS));
            }
            if ((Original_REMARK == null)) {
                throw new global::System.ArgumentNullException("Original_REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_REMARK));
            }
            if ((Original_IN_USE == null)) {
                throw new global::System.ArgumentNullException("Original_IN_USE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_IN_USE));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_USER_ID));
            }
            if ((Original_DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("Original_DATE_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_DATE_TIME));
            }
            if ((Original_SORT_CHUTE == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_SORT_CHUTE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TYPE, 
                    string AREA, 
                    string CHINESE, 
                    string ALIAS, 
                    string REMARK, 
                    string IN_USE, 
                    string USER_ID, 
                    string DATE_TIME, 
                    string SORT_CHUTE, 
                    string Original_LATERAL_ID, 
                    string Original_TYPE, 
                    string Original_AREA, 
                    string Original_CHINESE, 
                    string Original_ALIAS, 
                    string Original_REMARK, 
                    string Original_IN_USE, 
                    string Original_USER_ID, 
                    string Original_DATE_TIME, 
                    string Original_SORT_CHUTE) {
            return this.Update(Original_LATERAL_ID, TYPE, AREA, CHINESE, ALIAS, REMARK, IN_USE, USER_ID, DATE_TIME, SORT_CHUTE, Original_LATERAL_ID, Original_TYPE, Original_AREA, Original_CHINESE, Original_ALIAS, Original_REMARK, Original_IN_USE, Original_USER_ID, Original_DATE_TIME, Original_SORT_CHUTE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOOK_UPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public LOOK_UPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOOK_UP";
            tableMapping.ColumnMappings.Add("LOOK_ID", "LOOK_ID");
            tableMapping.ColumnMappings.Add("VALUE_1", "VALUE_1");
            tableMapping.ColumnMappings.Add("VALUE_2", "VALUE_2");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("UPD_USER", "UPD_USER");
            tableMapping.ColumnMappings.Add("DATE_TIME", "DATE_TIME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LOOK_UP] WHERE (([LOOK_ID] = @Original_LOOK_ID) AND ([VALUE_1]" +
                " = @Original_VALUE_1) AND ([VALUE_2] = @Original_VALUE_2) AND ([REMARK] = @Origi" +
                "nal_REMARK) AND ([UPD_USER] = @Original_UPD_USER) AND ([DATE_TIME] = @Original_D" +
                "ATE_TIME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOOK_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOOK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALUE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALUE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPD_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPD_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LOOK_UP] ([LOOK_ID], [VALUE_1], [VALUE_2], [REMARK], [UPD_USER], [DATE_TIME]) VALUES (@LOOK_ID, @VALUE_1, @VALUE_2, @REMARK, @UPD_USER, @DATE_TIME);
SELECT LOOK_ID, VALUE_1, VALUE_2, REMARK, UPD_USER, DATE_TIME FROM LOOK_UP WHERE (LOOK_ID = @LOOK_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOOK_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOOK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALUE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALUE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPD_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPD_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOOK_UP] SET [LOOK_ID] = @LOOK_ID, [VALUE_1] = @VALUE_1, [VALUE_2] = @VALUE_2, [REMARK] = @REMARK, [UPD_USER] = @UPD_USER, [DATE_TIME] = @DATE_TIME WHERE (([LOOK_ID] = @Original_LOOK_ID) AND ([VALUE_1] = @Original_VALUE_1) AND ([VALUE_2] = @Original_VALUE_2) AND ([REMARK] = @Original_REMARK) AND ([UPD_USER] = @Original_UPD_USER) AND ([DATE_TIME] = @Original_DATE_TIME));
SELECT LOOK_ID, VALUE_1, VALUE_2, REMARK, UPD_USER, DATE_TIME FROM LOOK_UP WHERE (LOOK_ID = @LOOK_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOOK_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOOK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALUE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALUE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPD_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPD_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOOK_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOOK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALUE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VALUE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VALUE_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPD_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPD_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::T1_BHS_OAS.Properties.Settings.Default.T1_BHS_DB;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LOOK_ID, VALUE_1, VALUE_2, REMARK, UPD_USER, DATE_TIME FROM dbo.LOOK_UP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(T1_BHS_DataSet.LOOK_UPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual T1_BHS_DataSet.LOOK_UPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            T1_BHS_DataSet.LOOK_UPDataTable dataTable = new T1_BHS_DataSet.LOOK_UPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet.LOOK_UPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOOK_UP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_LOOK_ID, string Original_VALUE_1, string Original_VALUE_2, string Original_REMARK, string Original_UPD_USER, string Original_DATE_TIME) {
            if ((Original_LOOK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_LOOK_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LOOK_ID));
            }
            if ((Original_VALUE_1 == null)) {
                throw new global::System.ArgumentNullException("Original_VALUE_1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_VALUE_1));
            }
            if ((Original_VALUE_2 == null)) {
                throw new global::System.ArgumentNullException("Original_VALUE_2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_VALUE_2));
            }
            if ((Original_REMARK == null)) {
                throw new global::System.ArgumentNullException("Original_REMARK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_REMARK));
            }
            if ((Original_UPD_USER == null)) {
                throw new global::System.ArgumentNullException("Original_UPD_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UPD_USER));
            }
            if ((Original_DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("Original_DATE_TIME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DATE_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string LOOK_ID, string VALUE_1, string VALUE_2, string REMARK, string UPD_USER, string DATE_TIME) {
            if ((LOOK_ID == null)) {
                throw new global::System.ArgumentNullException("LOOK_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LOOK_ID));
            }
            if ((VALUE_1 == null)) {
                throw new global::System.ArgumentNullException("VALUE_1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(VALUE_1));
            }
            if ((VALUE_2 == null)) {
                throw new global::System.ArgumentNullException("VALUE_2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(VALUE_2));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(REMARK));
            }
            if ((UPD_USER == null)) {
                throw new global::System.ArgumentNullException("UPD_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UPD_USER));
            }
            if ((DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("DATE_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DATE_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string LOOK_ID, string VALUE_1, string VALUE_2, string REMARK, string UPD_USER, string DATE_TIME, string Original_LOOK_ID, string Original_VALUE_1, string Original_VALUE_2, string Original_REMARK, string Original_UPD_USER, string Original_DATE_TIME) {
            if ((LOOK_ID == null)) {
                throw new global::System.ArgumentNullException("LOOK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LOOK_ID));
            }
            if ((VALUE_1 == null)) {
                throw new global::System.ArgumentNullException("VALUE_1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(VALUE_1));
            }
            if ((VALUE_2 == null)) {
                throw new global::System.ArgumentNullException("VALUE_2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(VALUE_2));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(REMARK));
            }
            if ((UPD_USER == null)) {
                throw new global::System.ArgumentNullException("UPD_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UPD_USER));
            }
            if ((DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("DATE_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DATE_TIME));
            }
            if ((Original_LOOK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_LOOK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_LOOK_ID));
            }
            if ((Original_VALUE_1 == null)) {
                throw new global::System.ArgumentNullException("Original_VALUE_1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_VALUE_1));
            }
            if ((Original_VALUE_2 == null)) {
                throw new global::System.ArgumentNullException("Original_VALUE_2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_VALUE_2));
            }
            if ((Original_REMARK == null)) {
                throw new global::System.ArgumentNullException("Original_REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_REMARK));
            }
            if ((Original_UPD_USER == null)) {
                throw new global::System.ArgumentNullException("Original_UPD_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_UPD_USER));
            }
            if ((Original_DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("Original_DATE_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DATE_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string VALUE_1, string VALUE_2, string REMARK, string UPD_USER, string DATE_TIME, string Original_LOOK_ID, string Original_VALUE_1, string Original_VALUE_2, string Original_REMARK, string Original_UPD_USER, string Original_DATE_TIME) {
            return this.Update(Original_LOOK_ID, VALUE_1, VALUE_2, REMARK, UPD_USER, DATE_TIME, Original_LOOK_ID, Original_VALUE_1, Original_VALUE_2, Original_REMARK, Original_UPD_USER, Original_DATE_TIME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MAKEUP_ALLOCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public MAKEUP_ALLOCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MAKEUP_ALLOC";
            tableMapping.ColumnMappings.Add("FIDS_DATE", "FIDS_DATE");
            tableMapping.ColumnMappings.Add("FLIGHT_NO", "FLIGHT_NO");
            tableMapping.ColumnMappings.Add("STD", "STD");
            tableMapping.ColumnMappings.Add("PRIORITY", "PRIORITY");
            tableMapping.ColumnMappings.Add("DESTINATION", "DESTINATION");
            tableMapping.ColumnMappings.Add("CABIN_CLASS", "CABIN_CLASS");
            tableMapping.ColumnMappings.Add("LATERAL_ID", "LATERAL_ID");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("DATE_TIME", "DATE_TIME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MAKEUP_ALLOC] WHERE (([FIDS_DATE] = @Original_FIDS_DATE) AND ([FLIGHT_NO] = @Original_FLIGHT_NO) AND ([STD] = @Original_STD) AND ([PRIORITY] = @Original_PRIORITY) AND ([DESTINATION] = @Original_DESTINATION) AND ([CABIN_CLASS] = @Original_CABIN_CLASS) AND ([LATERAL_ID] = @Original_LATERAL_ID) AND ([USER_ID] = @Original_USER_ID) AND ([DATE_TIME] = @Original_DATE_TIME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRIORITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIORITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CABIN_CLASS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CABIN_CLASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MAKEUP_ALLOC] ([FIDS_DATE], [FLIGHT_NO], [STD], [PRIORITY], [DESTINATION], [CABIN_CLASS], [LATERAL_ID], [USER_ID], [DATE_TIME]) VALUES (@FIDS_DATE, @FLIGHT_NO, @STD, @PRIORITY, @DESTINATION, @CABIN_CLASS, @LATERAL_ID, @USER_ID, @DATE_TIME);
SELECT FIDS_DATE, FLIGHT_NO, STD, PRIORITY, DESTINATION, CABIN_CLASS, LATERAL_ID, USER_ID, DATE_TIME FROM MAKEUP_ALLOC WHERE (FIDS_DATE = @FIDS_DATE) AND (FLIGHT_NO = @FLIGHT_NO) AND (PRIORITY = @PRIORITY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRIORITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIORITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CABIN_CLASS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CABIN_CLASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MAKEUP_ALLOC] SET [FIDS_DATE] = @FIDS_DATE, [FLIGHT_NO] = @FLIGHT_NO, [STD] = @STD, [PRIORITY] = @PRIORITY, [DESTINATION] = @DESTINATION, [CABIN_CLASS] = @CABIN_CLASS, [LATERAL_ID] = @LATERAL_ID, [USER_ID] = @USER_ID, [DATE_TIME] = @DATE_TIME WHERE (([FIDS_DATE] = @Original_FIDS_DATE) AND ([FLIGHT_NO] = @Original_FLIGHT_NO) AND ([STD] = @Original_STD) AND ([PRIORITY] = @Original_PRIORITY) AND ([DESTINATION] = @Original_DESTINATION) AND ([CABIN_CLASS] = @Original_CABIN_CLASS) AND ([LATERAL_ID] = @Original_LATERAL_ID) AND ([USER_ID] = @Original_USER_ID) AND ([DATE_TIME] = @Original_DATE_TIME));
SELECT FIDS_DATE, FLIGHT_NO, STD, PRIORITY, DESTINATION, CABIN_CLASS, LATERAL_ID, USER_ID, DATE_TIME FROM MAKEUP_ALLOC WHERE (FIDS_DATE = @FIDS_DATE) AND (FLIGHT_NO = @FLIGHT_NO) AND (PRIORITY = @PRIORITY)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRIORITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIORITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CABIN_CLASS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CABIN_CLASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIDS_DATE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIDS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLIGHT_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLIGHT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRIORITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRIORITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESTINATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CABIN_CLASS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CABIN_CLASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATERAL_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATERAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::T1_BHS_OAS.Properties.Settings.Default.T1_BHS_DB;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FIDS_DATE, FLIGHT_NO, STD, PRIORITY, DESTINATION, CABIN_CLASS, LATERAL_ID," +
                " USER_ID, DATE_TIME FROM dbo.MAKEUP_ALLOC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(T1_BHS_DataSet.MAKEUP_ALLOCDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual T1_BHS_DataSet.MAKEUP_ALLOCDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            T1_BHS_DataSet.MAKEUP_ALLOCDataTable dataTable = new T1_BHS_DataSet.MAKEUP_ALLOCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet.MAKEUP_ALLOCDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(T1_BHS_DataSet dataSet) {
            return this.Adapter.Update(dataSet, "MAKEUP_ALLOC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_FIDS_DATE, string Original_FLIGHT_NO, string Original_STD, int Original_PRIORITY, string Original_DESTINATION, string Original_CABIN_CLASS, string Original_LATERAL_ID, string Original_USER_ID, string Original_DATE_TIME) {
            if ((Original_FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_FIDS_DATE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FIDS_DATE));
            }
            if ((Original_FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_FLIGHT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FLIGHT_NO));
            }
            if ((Original_STD == null)) {
                throw new global::System.ArgumentNullException("Original_STD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_STD));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_PRIORITY));
            if ((Original_DESTINATION == null)) {
                throw new global::System.ArgumentNullException("Original_DESTINATION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DESTINATION));
            }
            if ((Original_CABIN_CLASS == null)) {
                throw new global::System.ArgumentNullException("Original_CABIN_CLASS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CABIN_CLASS));
            }
            if ((Original_LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("Original_LATERAL_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LATERAL_ID));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_USER_ID));
            }
            if ((Original_DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("Original_DATE_TIME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DATE_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FIDS_DATE, string FLIGHT_NO, string STD, int PRIORITY, string DESTINATION, string CABIN_CLASS, string LATERAL_ID, string USER_ID, string DATE_TIME) {
            if ((FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("FIDS_DATE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FIDS_DATE));
            }
            if ((FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("FLIGHT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FLIGHT_NO));
            }
            if ((STD == null)) {
                throw new global::System.ArgumentNullException("STD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STD));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PRIORITY));
            if ((DESTINATION == null)) {
                throw new global::System.ArgumentNullException("DESTINATION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DESTINATION));
            }
            if ((CABIN_CLASS == null)) {
                throw new global::System.ArgumentNullException("CABIN_CLASS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CABIN_CLASS));
            }
            if ((LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("LATERAL_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(LATERAL_ID));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USER_ID));
            }
            if ((DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("DATE_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DATE_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FIDS_DATE, 
                    string FLIGHT_NO, 
                    string STD, 
                    int PRIORITY, 
                    string DESTINATION, 
                    string CABIN_CLASS, 
                    string LATERAL_ID, 
                    string USER_ID, 
                    string DATE_TIME, 
                    string Original_FIDS_DATE, 
                    string Original_FLIGHT_NO, 
                    string Original_STD, 
                    int Original_PRIORITY, 
                    string Original_DESTINATION, 
                    string Original_CABIN_CLASS, 
                    string Original_LATERAL_ID, 
                    string Original_USER_ID, 
                    string Original_DATE_TIME) {
            if ((FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("FIDS_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FIDS_DATE));
            }
            if ((FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("FLIGHT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FLIGHT_NO));
            }
            if ((STD == null)) {
                throw new global::System.ArgumentNullException("STD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STD));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PRIORITY));
            if ((DESTINATION == null)) {
                throw new global::System.ArgumentNullException("DESTINATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DESTINATION));
            }
            if ((CABIN_CLASS == null)) {
                throw new global::System.ArgumentNullException("CABIN_CLASS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CABIN_CLASS));
            }
            if ((LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("LATERAL_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(LATERAL_ID));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USER_ID));
            }
            if ((DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("DATE_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(DATE_TIME));
            }
            if ((Original_FIDS_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_FIDS_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_FIDS_DATE));
            }
            if ((Original_FLIGHT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_FLIGHT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_FLIGHT_NO));
            }
            if ((Original_STD == null)) {
                throw new global::System.ArgumentNullException("Original_STD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_STD));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_PRIORITY));
            if ((Original_DESTINATION == null)) {
                throw new global::System.ArgumentNullException("Original_DESTINATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DESTINATION));
            }
            if ((Original_CABIN_CLASS == null)) {
                throw new global::System.ArgumentNullException("Original_CABIN_CLASS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CABIN_CLASS));
            }
            if ((Original_LATERAL_ID == null)) {
                throw new global::System.ArgumentNullException("Original_LATERAL_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_LATERAL_ID));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_USER_ID));
            }
            if ((Original_DATE_TIME == null)) {
                throw new global::System.ArgumentNullException("Original_DATE_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_DATE_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string STD, string DESTINATION, string CABIN_CLASS, string LATERAL_ID, string USER_ID, string DATE_TIME, string Original_FIDS_DATE, string Original_FLIGHT_NO, string Original_STD, int Original_PRIORITY, string Original_DESTINATION, string Original_CABIN_CLASS, string Original_LATERAL_ID, string Original_USER_ID, string Original_DATE_TIME) {
            return this.Update(Original_FIDS_DATE, Original_FLIGHT_NO, STD, Original_PRIORITY, DESTINATION, CABIN_CLASS, LATERAL_ID, USER_ID, DATE_TIME, Original_FIDS_DATE, Original_FLIGHT_NO, Original_STD, Original_PRIORITY, Original_DESTINATION, Original_CABIN_CLASS, Original_LATERAL_ID, Original_USER_ID, Original_DATE_TIME);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FIDS_2DAYTableAdapter _fIDS_2DAYTableAdapter;
        
        private LATERAL_CONFTableAdapter _lATERAL_CONFTableAdapter;
        
        private LOOK_UPTableAdapter _lOOK_UPTableAdapter;
        
        private MAKEUP_ALLOCTableAdapter _mAKEUP_ALLOCTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FIDS_2DAYTableAdapter FIDS_2DAYTableAdapter {
            get {
                return this._fIDS_2DAYTableAdapter;
            }
            set {
                this._fIDS_2DAYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LATERAL_CONFTableAdapter LATERAL_CONFTableAdapter {
            get {
                return this._lATERAL_CONFTableAdapter;
            }
            set {
                this._lATERAL_CONFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LOOK_UPTableAdapter LOOK_UPTableAdapter {
            get {
                return this._lOOK_UPTableAdapter;
            }
            set {
                this._lOOK_UPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MAKEUP_ALLOCTableAdapter MAKEUP_ALLOCTableAdapter {
            get {
                return this._mAKEUP_ALLOCTableAdapter;
            }
            set {
                this._mAKEUP_ALLOCTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._fIDS_2DAYTableAdapter != null) 
                            && (this._fIDS_2DAYTableAdapter.Connection != null))) {
                    return this._fIDS_2DAYTableAdapter.Connection;
                }
                if (((this._lATERAL_CONFTableAdapter != null) 
                            && (this._lATERAL_CONFTableAdapter.Connection != null))) {
                    return this._lATERAL_CONFTableAdapter.Connection;
                }
                if (((this._lOOK_UPTableAdapter != null) 
                            && (this._lOOK_UPTableAdapter.Connection != null))) {
                    return this._lOOK_UPTableAdapter.Connection;
                }
                if (((this._mAKEUP_ALLOCTableAdapter != null) 
                            && (this._mAKEUP_ALLOCTableAdapter.Connection != null))) {
                    return this._mAKEUP_ALLOCTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._fIDS_2DAYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lATERAL_CONFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOOK_UPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mAKEUP_ALLOCTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(T1_BHS_DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fIDS_2DAYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FIDS_2DAY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fIDS_2DAYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lATERAL_CONFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LATERAL_CONF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lATERAL_CONFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lOOK_UPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOOK_UP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOOK_UPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mAKEUP_ALLOCTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MAKEUP_ALLOC.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mAKEUP_ALLOCTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(T1_BHS_DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fIDS_2DAYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FIDS_2DAY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fIDS_2DAYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lATERAL_CONFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LATERAL_CONF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lATERAL_CONFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lOOK_UPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOOK_UP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOOK_UPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mAKEUP_ALLOCTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MAKEUP_ALLOC.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mAKEUP_ALLOCTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(T1_BHS_DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mAKEUP_ALLOCTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MAKEUP_ALLOC.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mAKEUP_ALLOCTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lOOK_UPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOOK_UP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOOK_UPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lATERAL_CONFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LATERAL_CONF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lATERAL_CONFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fIDS_2DAYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FIDS_2DAY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fIDS_2DAYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(T1_BHS_DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._fIDS_2DAYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fIDS_2DAYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lATERAL_CONFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lATERAL_CONFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lOOK_UPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOOK_UPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mAKEUP_ALLOCTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mAKEUP_ALLOCTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._fIDS_2DAYTableAdapter != null)) {
                    revertConnections.Add(this._fIDS_2DAYTableAdapter, this._fIDS_2DAYTableAdapter.Connection);
                    this._fIDS_2DAYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fIDS_2DAYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fIDS_2DAYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fIDS_2DAYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fIDS_2DAYTableAdapter.Adapter);
                    }
                }
                if ((this._lATERAL_CONFTableAdapter != null)) {
                    revertConnections.Add(this._lATERAL_CONFTableAdapter, this._lATERAL_CONFTableAdapter.Connection);
                    this._lATERAL_CONFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lATERAL_CONFTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lATERAL_CONFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lATERAL_CONFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lATERAL_CONFTableAdapter.Adapter);
                    }
                }
                if ((this._lOOK_UPTableAdapter != null)) {
                    revertConnections.Add(this._lOOK_UPTableAdapter, this._lOOK_UPTableAdapter.Connection);
                    this._lOOK_UPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lOOK_UPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lOOK_UPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOOK_UPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOOK_UPTableAdapter.Adapter);
                    }
                }
                if ((this._mAKEUP_ALLOCTableAdapter != null)) {
                    revertConnections.Add(this._mAKEUP_ALLOCTableAdapter, this._mAKEUP_ALLOCTableAdapter.Connection);
                    this._mAKEUP_ALLOCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mAKEUP_ALLOCTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mAKEUP_ALLOCTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mAKEUP_ALLOCTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mAKEUP_ALLOCTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._fIDS_2DAYTableAdapter != null)) {
                    this._fIDS_2DAYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fIDS_2DAYTableAdapter]));
                    this._fIDS_2DAYTableAdapter.Transaction = null;
                }
                if ((this._lATERAL_CONFTableAdapter != null)) {
                    this._lATERAL_CONFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lATERAL_CONFTableAdapter]));
                    this._lATERAL_CONFTableAdapter.Transaction = null;
                }
                if ((this._lOOK_UPTableAdapter != null)) {
                    this._lOOK_UPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lOOK_UPTableAdapter]));
                    this._lOOK_UPTableAdapter.Transaction = null;
                }
                if ((this._mAKEUP_ALLOCTableAdapter != null)) {
                    this._mAKEUP_ALLOCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mAKEUP_ALLOCTableAdapter]));
                    this._mAKEUP_ALLOCTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591